{"version":3,"sources":["logo.svg","Edit.js","Edituser.js","Read.js","Delete.js","App.js","reportWebVitals.js","index.js"],"names":["Edit","username","userpic","id","setedit","getdata","useState","name","setname","pic","seturl","className","value","onChange","event","target","placeholder","onClick","fetch","method","headers","body","JSON","stringify","then","Edituser","edituser","style","width","height","src","alt","Read","Createuser","value_name","value_pic","setpic","add","useradded","Delete","App","user","getuser","Getdata","data","json","newdata","useEffect","to","path","map","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d147c593.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState } from 'react';\r\n\r\n\r\n\r\nexport function Edit({ username, userpic, id, setedit, getdata }) {\r\n  const [name, setname] = useState(username);\r\n  const [pic, seturl] = useState(userpic);\r\n  const edituserid = () => {\r\n    setedit(false);\r\n    fetch(\"https://615156d34a5f22001701d14b.mockapi.io/users/\" + id, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        pic: pic\r\n      })\r\n    }).then(() => getdata());\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <input\r\n          className=\"userinput\"\r\n          value={name}\r\n          onChange={(event) => setname(event.target.value)}\r\n\r\n          placeholder=\"Folder name\" />\r\n\r\n        <input\r\n          className=\"userinput1\"\r\n          value={pic}\r\n          onChange={(event) => seturl(event.target.value)}\r\n          placeholder=\"Enter image url\" />\r\n          \r\n        <button className=\"button3\" onClick={edituserid}>\r\n          Save Changes\r\n        </button>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Edit } from \"./Edit\";\r\n\r\nexport function Edituser({ username, userpic, id, getdata }) {\r\n  const [edituser, setedit] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"div1\">\r\n        \r\n        <img className=\"userimg\" style={{ width: \"120px\", height: \"120px\" }} src={userpic} alt={username} />\r\n        \r\n        <div className=\"usernamediv\">\r\n          <h1 className=\"username\">{username}</h1>\r\n\r\n          <button className=\"button3\" onClick={() => setedit(!edituser)}>{edituser ? \"Cansel edit\" : \"Edit folder\"}</button>\r\n          {edituser ? <Edit username={username} userpic={userpic} id={id}\r\n            setedit={setedit} getdata={getdata} /> : \"\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport function Read({ username, userpic }) {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"div1\">\r\n        <img className=\"userimg\" style={{ width: \"100px\", height: \"100px\" }} src={userpic} alt={username} />\r\n        <h1 className=\"username\">{username}</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport function Createuser({ getdata }) {\r\n  const [value_name, setname] = useState(\"\");\r\n  const [value_pic, setpic] = useState(\"\");\r\n  const [add, useradded] = useState(\"\");\r\n\r\n  const clearfeild = () => {\r\n    setpic(\"\");\r\n    setname(\"\");\r\n    useradded(\"New user added successfully , check in Dashboard\");\r\n  };\r\n\r\n  const adduser = () => {\r\n\r\n    fetch(\"https://615156d34a5f22001701d14b.mockapi.io/users\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          name: value_name,\r\n          pic: value_pic\r\n        })\r\n      }).then(() => getdata());\r\n    setpic(\"\");\r\n    setname(\"\");\r\n    useradded(\"New folder added successfully , check in Dashboard\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"inputdivbox\">\r\n        <input\r\n          className=\"input1\"\r\n          value={value_name}\r\n          onChange={(event) => setname(event.target.value)}\r\n          placeholder=\"Folder name\" />\r\n        <br />\r\n        <input\r\n          className=\"input2\"\r\n          value={value_pic}\r\n          onChange={(event) => setpic(event.target.value)}\r\n          placeholder=\"Enter image url\" />\r\n        <br />\r\n        \r\n        <button className=\"button\" onClick={adduser}>Create folder</button>\r\n        <h1 className=\"popup\">{add}</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export function Delete({ username, userpic, id, getdata }) {\r\n  const Deleteuser = () => {\r\n    fetch(\"https://615156d34a5f22001701d14b.mockapi.io/users/\" + id,\r\n      { method: \"DELETE\" }\r\n    ).then(() => getdata());\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"div1\">\r\n        <img className=\"userimg\" style={{ width: \"100px\", height: \"100px\" }} src={userpic} alt={username} />\r\n        <div className=\"usernamediv\">\r\n          <h1 className=\"username\">{username}</h1>\r\n          <button className=\"button3\" onClick={Deleteuser}>Delete folder</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { Edituser } from './Edituser';\nimport { Read, Createuser } from './Read';\nimport { Delete } from './Delete';\nimport React, { Component } from 'react';\n\nimport { render } from 'react-dom';\nfunction App() {\n\n  const [user, getuser] = useState([]);\n  const Getdata = () => {\n    fetch(\"https://615156d34a5f22001701d14b.mockapi.io/users\", { method: \"GET\" })\n      .then((data) => data.json())\n      .then((newdata) => getuser(newdata))\n  }\n  useEffect(() => {\n    Getdata()\n  }, [])\n\n  \n\n    \n\n  \n  \n    \n  \n  \n  \n    \n    \n\n\n\n\n  return (\n    <>\n    <div className=\"headingtitle\">\n      <img className=\"driveimg\" src=\"https://kstatic.googleusercontent.com/files/f4b4fbcc6119576da7ab3f68270196009fc1b16f1927910842d793c385115593b6dd5fbe9a1e21fe64f3cbbc509c3a02c95ebc9635f76c355282482986f1fe7d\" />\n      <h1 className=\"google\">Google</h1>\n      <h1 className=\"drive\">Drive</h1>\n    \n\n\n    </div>\n      <div className=\"main\">\n        <div className=\"links\">\n\n          <div className=\"link\">\n            <Link className=\"link1\" to=\"/users\">My Drive </Link>\n            <br />\n            <Link className=\"link2\" to=\"/create\"><img src=\"data:image/svg+xml;charset=UTF-8,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2236%22 height=%2236%22 viewBox=%220 0 36 36%22%3E%3Cpath fill=%22%2334A853%22 d=%22M16 16v14h4V20z%22/%3E%3Cpath fill=%22%234285F4%22 d=%22M30 16H20l-4 4h14z%22/%3E%3Cpath fill=%22%23FBBC05%22 d=%22M6 16v4h10l4-4z%22/%3E%3Cpath fill=%22%23EA4335%22 d=%22M20 16V6h-4v14z%22/%3E%3Cpath fill=%22none%22 d=%22M0 0h36v36H0z%22/%3E%3C/svg%3E\" />New Folder</Link>\n            <br />\n            <Link className=\"link3\" to=\"/editprofile\">Edit Folder</Link>\n            <br />\n            <Link className=\"link4\" to=\"/delete\">Delete Folder</Link>\n          </div>\n\n        </div>\n\n        \n        <div className=\"gridbox\">\n          <Switch>\n            {/* route first */}\n            \n            <Route path=\"/users\" >\n             <div className=\"boxgrid\">\n              {user.map((element) => (\n\n                <Read username={element.name} userpic={element.pic} />\n              ))}\n              </div>\n            </Route>\n\n            {/* route second */}\n            <Route path=\"/create\">\n              <Createuser getdata={Getdata} />\n            </Route>\n\n            {/* route third */}\n            <Route path=\"/editprofile\">\n            <div className=\"boxgrid\">\n              {user.map((element) => (\n\n                <Edituser username={element.name} userpic={element.pic} id={element.id} getdata={Getdata} />\n              ))}\n              </div>\n            </Route>\n            <Route>\n            <div className=\"boxgrid\">\n              {user.map((element) => (\n\n                <Delete username={element.name} userpic={element.pic} id={element.id} getdata={Getdata} />\n              ))}\n              </div>\n            </Route>\n          </Switch>\n          </div>\n        </div>\n     \n    </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}